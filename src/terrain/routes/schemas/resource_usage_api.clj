(ns terrain.routes.schemas.resource-usage-api
  (:require [common-swagger-api.schema :refer [describe]]
            [schema.core :refer [defschema maybe]]
            [terrain.routes.schemas.data-usage-api :refer [UserCurrentDataTotal]])
  (:import [java.util UUID]))

(def ResourceSummarySummary "A summary of a user's resource usage")
(def ResourceSummaryDescription "A summary of a user's resource usage, including CPU hours, data usage, jobs run, and current plan")

(defschema CPUHoursTotal
  {:id              (describe String "The UUID assigned to the total")
   :user_id         (describe String "The UUID assigned to the user the total applies to")
   :username        (describe String "The username of the user the total applies to")
   :total           (describe String "The total number of CPU hours that the user has reserved")
   :effective_start (describe String "The start date for the time range during which the total is applicable")
   :effective_end   (describe String "The end date for the time range during which the total is applicable ")
   :last_modified   (describe String "The date the record in the database was last modified")})

(defschema APIError
  {:field      (describe String "The top-level JSON field whose generation caused the error to occur")
   :message    (describe String "The error message")
   :error_code (describe Integer "The HTTP status code that was generated by the error")})

(defschema PlanSummary
  {:id          (describe String "The UUID of the plan")
   :name        (describe String "The name of the plan")
   :description (describe String "The description of the plan")})

(defschema QMSUserSummary
  {:id       (describe String "The UUID QMS assigned the user")
   :username (describe String "The user's username in QMS, probably the same as in the DE")})

(defschema ResourceTypeSummary
  {:id                 (describe String "The UUID for the resource type")
   :name               (describe String "The name of the resource type")
   :description        (describe String "The description of the resource type")})

(defschema QuotaSummary
  {:id               (describe String "The UUID assigned to the quota")
   :quota            (describe (maybe Double) "The quota's value")
   :resource_type    (describe ResourceTypeSummary "The resource type of the quota")
   :last_modified_at (describe (maybe String) "The time that the quota was last modified")})

(defschema UsageSummary
  {:id               (describe String "The UUID assigned to the usage")
   :usage            (describe (maybe Double) "The usage value")
   :resource_type    (describe ResourceTypeSummary "The resource type of the usage")
   :last_modified_at (describe (maybe String) "The time that the usage record was last modified")})

(defschema AddonRateSummary
  {:id             (describe UUID "The UUID for the add-on rate")
   :rate           (describe Double "The rate charged for the add-on")
   :effective_date (describe String "The date and time that the addon rate becomes effective")})

(defschema AddOnSummary
  {:id             (describe UUID "The UUID for the add-on")
   :name           (describe String "The name of the add-on")
   :description    (describe String "The description of the add-on")
   :default_amount (describe Double "The amount of the resource provided by the add-on")
   :default_paid   (describe Boolean "Whether the add-on needs to be paid for")
   :resource_type  (describe ResourceTypeSummary "The resource type the add-on provides more of")})

(defschema SubscriptionAddonSummary
  {:id         (describe UUID "The UUID for the subscribed add-on")
   :addon      (describe AddOnSummary "The add-on applied to the subscription")
   :amount     (describe Double "The amount of the resource type provided by the add-on that was actually applied to the subscription")
   :paid       (describe Boolean "Whether the add-on needs/needed to be paid for")
   :addon_rate (describe AddonRateSummary "The active rate for the addon when it was added to the subscription")})

(defschema SubscriptionSummary
  {:id                   (describe String "The user plan's UUID")
   :effective_start_date (describe String "The date the user's plan takes effect")
   :effective_end_date   (describe String "The date the user's plan ends")
   :plan                 (describe PlanSummary "The type of plan the user has")
   :quotas               (describe [QuotaSummary] "The list of quotas that the user has with their plan")
   :usages               (describe [UsageSummary] "The list of usages associated with the subscription")
   :addons               (describe [SubscriptionAddonSummary] "The user's subscription add-ons")
   :users                (describe QMSUserSummary "User information from the quota management system")})

(defschema ResourceSummary
  {:cpu_usage     (describe CPUHoursTotal "The object containing the CPU hours total")
   :data_usage    (describe UserCurrentDataTotal "The object containing the data usage total")
   :subscription  (describe SubscriptionSummary "The user's subscription")
   :errors        (describe [APIError] "The list of errors generated during summary creation")})
