(ns terrain.routes.schemas.qms
  (:require [common-swagger-api.schema :refer [describe]]
            [schema.core :refer [defschema Any optional-key maybe]])
  (:import [java.util UUID]))

(def GetAllPlansSummary "Returns a list of all plans registered in QMS")
(def GetAllPlansDescription "Returns a list of all plans registered in QMS. New plans may be registered at run-time through QMS itself")
(def GetPlanSummary "Returns details about a single plan in QMS")
(def GetPlanDescription "Returns details about a single plan in QMS. Plan is referenced by its UUID")
(def GetUserPlanSummary "Returns details about the user's current plan")
(def GetUserPlanDescription "Returns details about the user's current plan, including quota and usage information")
(def UpdateUserPlanSummary "Changes the user's plan to another one in QMS")
(def UpdateUserPlanDescription "Changes the user's plan to another one in QMS. New plan is referenced by name")
(def GetUserUsagesSummary "Returns a list of resource usages generated by the user")
(def GetUserUsagesDescription "Returns a list of resource usages generated by the user")
(def UpdateUsageSummary "Updates resource usage totals for a user")
(def UpdateUsageDescription "Updates resource usage totals for a user")

(def PlanID (describe (maybe UUID) "The UUID assigned to a plan in QMS"))
(def PlanName (describe String "The name of the plan"))
(def PlanQuotaDefault (describe (maybe UUID) "The UUIID assigned to the plan quota default"))
(def QMSUserID (describe (maybe UUID) "The user's UUID assigned by QMS"))
(def QuotaID (describe (maybe UUID) "The UUID for the quota in QMS"))
(def ResourceID (describe (maybe UUID) "The UUID assigned to a resource type record"))
(def UsageID (describe (maybe UUID) "The UUID assigned to a user's usage record for a resource"))
(def Username (describe String "A user's username"))

(defschema SuccessResponse
  {(optional-key :result) (describe (maybe Any) "The result of the response")
   (optional-key :error)  (describe (maybe String) "The error string")
   :status                (describe String "The status of the response")})

(defschema ResourceType
  {:id   ResourceID
   :name (describe String "The name of the resource type")
   :unit (describe String "The unit of the resource type")})

(defschema Usage
  {:id            UsageID
   :usage         (describe Double "The usage value")
   :resource_type ResourceType})

(defschema UsagesResponse
  {(optional-key :result) (describe (maybe [Usage]) "The list of usages")
   (optional-key :error)  (describe (maybe String) "The error message")
   :status                (describe String "The status of the response")})

(defschema AddUsage
  {:username      Username
   :resource_name (describe String "The name of the resource that was used")
   :usage_value   (describe Double "The usage value")
   :update_type   (describe String "The update type")})

(defschema QMSUser
  {:id        QMSUserID
   :username (describe String "The user's username in QMS")})

(defschema PlanQuotaDefault
  {:id            PlanQuotaDefault
   :quota_value   (describe Double "The quota's default value")
   :resource_type ResourceType})

(defschema Plan
  {:id                  PlanID
   :name                (describe String "The name of the plan in QMS")
   :description         (describe String "The description of the plan")
   :plan_quota_defaults (describe [PlanQuotaDefault] "The list of default values for the quotas")})

(defschema PlanListResponse
  {(optional-key :result) (describe (maybe [Plan]) "The list of plans")
   (optional-key :error)  (describe (maybe String) "The error message")
   :status                (describe String "The status of the response")})

(defschema PlanResponse
  {(optional-key :result) (describe (maybe Plan) "The plan")
   (optional-key :error)  (describe (maybe String) "The error message")
   :status                (describe String "The status of the response")})

(defschema Quota
  {:id            QuotaID
   :quota         (describe Double "The value associated with the quota")
   :resource_type ResourceType})

(defschema UserPlan
  {:id                   (describe (maybe UUID) "The UUID assigned to a user's plan")
   :effective_start_date (describe String "The date the user's plan takes effect")
   :effective_end_date   (describe String "The date the user's plan ends")
   :user                 QMSUser
   :plan                 Plan
   :quotas               (describe [Quota] "The list of quotas associated with the user's plan")
   :usages               (describe [Usage] "The list of usages associated with the user's plan")})

(defschema UserPlanResponse
  {(optional-key :result) (describe (maybe UserPlan) "The user's plan")
   (optional-key :error)  (describe (maybe String) "The error message")
   :status                (describe String "The status of the response")})

